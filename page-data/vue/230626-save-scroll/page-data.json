{"componentChunkName":"component---src-templates-blog-post-js","path":"/vue/230626-save-scroll/","result":{"data":{"site":{"siteMetadata":{"title":"JuHeon's Dev Blog"}},"markdownRemark":{"id":"ec29ee4e-5c9c-50be-814e-8a5bea038212","excerpt":"2023-03-09 에 작성된 원문을 수정한 버전입니다 SPA(Single Page Application)에서 이전 페이지의 스크롤 위치를 기억해두었다가 재방문 했을 때 그 자리에 위치해야 하는 경우가 있다. 이를 구현하기 위한 방법을 알아보자. 1. vue-router…","html":"<p><em>2023-03-09 에 작성된 <a href=\"https://ps-hjhj97.tistory.com/220\">원문</a>을 수정한 버전입니다</em></p>\n<p>SPA(Single Page Application)에서 이전 페이지의 스크롤 위치를 기억해두었다가 재방문 했을 때 그 자리에 위치해야 하는 경우가 있다. 이를 구현하기 위한 방법을 알아보자.</p>\n<h2>1. vue-router의 savedPosition 활용</h2>\n<p>vue-router의 <code class=\"language-text\">createRouter()</code>함수의 인자로 <code class=\"language-text\">scrollBehavior</code>함수를 넣을 수 있다.</p>\n<p>이 함수에서 return 해주는 값에 따라서 페이지를 이동할 때마다 해당 값만큼 스크롤이 이동하게 된다. (쉽게 얘기하면 <code class=\"language-text\">window.scrollTo</code> 함수가 페이지 이동할 때마다 호출된다고 생각하면 된다.)<br>\n예를 들어 아래 코드와 같이 <code class=\"language-text\">{top : 100}</code>을 리턴하다면 매 페이지 이동 시 수직 스크롤이 100px 내려져 있는 상태가 된다.</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">const router = createRouter({\n  history: createWebHistory(),\n  routes,\n  scrollBehavior() {\n    return { top: 100 }\n  },\n})</code>\n        </deckgo-highlight-code>\n<br />\n<br />\n<p>그렇다면 스크롤 위치를 저장하고 해당 위치로 돌아가려면 어떻게 해야할까?</p>\n<p><code class=\"language-text\">scrollBehavior</code>함수는 아래와 같이 인자로 <code class=\"language-text\">to</code>, <code class=\"language-text\">from</code>, <code class=\"language-text\">savedPosistion</code> 이렇게 3개를 받는다. <code class=\"language-text\">to</code>는 다음으로 이동할 페이지의 정보, <code class=\"language-text\">from</code>은 이전에 어느 페이지로부터 왔는지에 대한 정보이다.</p>\n<p>그리고 <code class=\"language-text\">savedPosition</code>에 우리가 원하는 정보가 들어있다.</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">const router = createRouter({\n  history: createWebHistory(),\n  routes,\n\n  scrollBehavior(to, from, savedPosition) {\n    // 기존 위치 존재하면 그 위치 반환\n    if (savedPosition) {\n      return savedPosition\n    }\n  },\n})</code>\n        </deckgo-highlight-code>\n<br />\n영상으로 이 값의 정체를 직접 확인해보자.\n<br />\n<br />\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/hjhj97/blog.gatsby/main/content/blog/vue/images/save-scroll/save-scroll-1.gif\" height=\"600\">\n</div>\n<p>콘솔로 <code class=\"language-text\">savedPosition</code>을 찍어보면 그 정체는 <code class=\"language-text\">{top: number,left : number}</code>형태라는 걸 알 수 있다.</p>\n<p>다만 <code class=\"language-text\">savedPosition</code> 값은 사용자가 <strong>뒤로가기/앞으로가기</strong> 를 누를 때만 값이 활성화되고 vue-router를 활용하여 페이지 이동할 때는 값이 null값으로 반환되어서 위치를 저장할 수 없다. 만약 뒤로가기/앞으로가기 누를 때 뿐만 아니라 모든 경우에 대해서 스크롤 위치를 저장하기 위해서는 아래 2번 방법을 사용해야한다.</p>\n<h2>2. Web Storage(sessionStorage) 활용</h2>\n<p>두 번째 방법은 Web Storage를 활용하여 스크롤 위치를 동적으로 기억해 놓는 것이다. Web Storage는 크게 <code class=\"language-text\">localStorage</code>와 <code class=\"language-text\">sessionStorage</code>가 있는데 차이는 브라우저를 닫았을 때 데이터가 날리느냐 마냐의 차이이다. 보통 웹사이트의 특정 기간동안 '로그인상태 유지' 기능이 활성화한다면 브라우저가 꺼져도 유지되야 하므로 <code class=\"language-text\">localStorage</code>에 저장하는게 적합하다. 스크롤 위치 정보의 경우 브라우저를 껐다가 다시 실행했을 경우에는 초기화 시키는게 적합하므로 <code class=\"language-text\">sessionStorage</code>에 저장하기로 했다.</p>\n<ol>\n<li>\n<p>페이지를 이동할 때마다 현재 페이지의 스크롤 위치를 저장해두어야 한다.\n따라서 vue-router의 <code class=\"language-text\">beforeEach()</code>함수에서 떠나는 페이지(from)의 스크롤 위치인 <code class=\"language-text\">window.scrollY</code> 값을 <code class=\"language-text\">sessionStorage</code>에 key-value 형태로 저장한다. key값은 현재 페이지의 이름, value값은 스크롤 위치 값이다.</p>\n<p>이때 Web Storage에는 string형태의 데이터만 저장할 수 있으므로 저장할 때는 <code class=\"language-text\">JSON.stringify()</code>로, 값을 꺼낼 때는 <code class=\"language-text\">JSON.parse()</code>함수를 거쳐야 한다.</p>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">router.beforeEach((_, from) =&gt; {\n  const prevInfo = JSON.parse(window.sessionStorage.getItem(&quot;scrollInfo&quot;))\n\n  const key = from.name\n  if (key) {\n    const scrollObj = { [key]: window.scrollY }\n    window.sessionStorage.setItem(\n      &quot;scrollInfo&quot;,\n      JSON.stringify({ ...prevInfo, ...scrollObj })\n    )\n  }\n})</code>\n        </deckgo-highlight-code>\n</li>\n<li>\n<p>특정 페이지에 진입하면 <code class=\"language-text\">scrollInfo</code>에서 이전에 저장되어 있는 스크롤 위치가 있는지 확인한 후, 있다면 그 위치로 이동시킨다.</p>\n</li>\n</ol>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">const router = createRouter({\n  history: createWebHistory(),\n  routes,\n  scrollBehavior(to) {\n    const prevInfo = JSON.parse(window.sessionStorage.getItem(&quot;scrollInfo&quot;))\n    if (!prevInfo) return\n    const savedPosition = prevInfo[to.name] || 0\n\n    return { top: savedPosition }\n  },\n})</code>\n        </deckgo-highlight-code>\n<br />\n<p>콘솔로 <code class=\"language-text\">prevInfo</code>를 찍어보면 다음과 아래와 같이 나온다.</p>\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/hjhj97/blog.gatsby/main/content/blog/vue/images/save-scroll/save-scroll-2.gif\" height=\"600\">\n</div>\n<p>즉 <code class=\"language-text\">prevInfo</code>에 저장된 value값을 받아서 <code class=\"language-text\">scrollBehavior</code>함수의 top값으로 리턴해주게 되면 이전에 저장되었던 스크롤 위치로 복귀할 수 있게 되는 원리이다.</p>\n<h2>Reference</h2>\n<p>(<a href=\"https://in0407.tistory.com/11\">https://in0407.tistory.com/11</a>)</p>","frontmatter":{"title":"Vue 에서 스크롤 위치 저장","date":"2023-06-26","description":null,"category":"Vue"}},"previous":{"fields":{"slug":"/essay/230625-project-review/"},"frontmatter":{"title":"프로젝트 회고"}},"next":{"fields":{"slug":"/vue/230627-vue-async-data/"},"frontmatter":{"title":"vue-chart에서 비동기 통신 후 화면에 반영하기"}}},"pageContext":{"id":"ec29ee4e-5c9c-50be-814e-8a5bea038212","previousPostId":"40d2e5e6-7b84-5697-8c2a-6851785a7962","nextPostId":"e4ac637f-ae01-51f1-9954-817f6580ddfd"}},"staticQueryHashes":["2841359383","3821306223"],"slicesMap":{}}